// two pointer approach




Given a string s, find the length of the longest 
substring
 without repeating characters.

 

Example 1:

Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.






class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        if(s.length()==0 || s.length()==1)return s.length();
        int len=0;
        int l=0;int r=0;
        unordered_set<char>har;
        while(r<s.length() && l<s.length())
        {
            while(har.find(s[r])!=har.end())
            {
                har.erase(har.find(s[l++]));
            }
            har.insert(s[r]);
            len=max(len,r-l+1);
            r++;
        }
        return len;
    }
};