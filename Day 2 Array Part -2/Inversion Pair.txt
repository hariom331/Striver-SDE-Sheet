// this question is just wow




#include <bits/stdc++.h> 
long long merge(vector<long long>&a, int left, int right)
{
    if(left==right)return 0;
    int mid = (left+right)/2;
    long long count = merge(a,left,mid);
    count+=  merge(a, mid+1,right);
    int i=left;
    int j=mid+1;
    while(i <= mid && j <= right)
    {
        if(a[i]<=a[j])i++;
        else
        {
            count+=mid-i+1;
            j++;
        }
    }

    sort(a.begin()+left,a.begin()+right+1);
    return count;
    
}
long long getInversions(long long *arr, int n){
    vector<long long>a(n);
    for(int i=0;i<n;i++)
    {
        a[i]=*(arr+i);
    }
    long long ans= merge(a,0,n-1);
    return ans;
}