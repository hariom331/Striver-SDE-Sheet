Given a set of N jobs where each jobi has a deadline and profit associated with it.

Each job takes 1 unit of time to complete and only one job can be scheduled at a time. We earn the profit associated with job if and only if the job is completed by its deadline.

Find the number of jobs done and the maximum profit.

Note: Jobs will be given in the form (Jobid, Deadline, Profit) associated with that Job.


Example 1:

Input:
N = 4
Jobs = {(1,4,20),(2,1,10),(3,1,40),(4,1,30)}
Output:
2 60
Explanation:
Job1 and Job3 can be done with
maximum profit of 60 (20+40).





















class Solution 
{
    public:
    bool static comp(Job a, Job b)
    {
        return a.profit> b.profit;
    }
    //Function to find the maximum profit and the number of jobs done.
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        sort(arr,arr+n,comp);
        int maxdead=1;
        for(int i=0;i<n;i++)
        {
            maxdead=max(maxdead, arr[i].dead);
        }
        int har[maxdead+1];
        int sum=0;
        int count=0;
        for(int i=0;i<=maxdead;i++)har[i]=-1;
        for(int i=0;i<n;i++)
        {
            for(int j=arr[i].dead; j>=1;j--)
            {
                if(har[j]==-1)
                {
                    har[j]=arr[i].id;
                    sum+=arr[i].profit;
                    count++;
                    break;
                }
            }
        }
        return {count, sum};
    } 
};