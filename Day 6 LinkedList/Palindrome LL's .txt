Given the head of a singly linked list, return true if it is a 
palindrome
 or false otherwise.

 

Example 1:


Input: head = [1,2,2,1]
Output: true







class Solution {
public:
    bool isPalindrome(ListNode* head) {
        if(!head)return true;
        ListNode *s=head;
        ListNode *f=head;
        while(f->next && f->next->next)
        {
            s=s->next;
            f=f->next->next;
        }
        ListNode* current = s->next;
        ListNode *prev = NULL, *next = NULL;
 
        while (current != NULL) {
            // Store next
            next = current->next;
            // Reverse current node's pointer
            current->next = prev;
            // Move pointers one position ahead.
            prev = current;
            current = next;
        }
        s->next = prev;
        ListNode* d=head;
        s=s->next;
        while(s!=NULL)
        {
            if(s->val != d->val)return false;
            s=s->next;
            d=d->next;
        }
        return true;
    }
};